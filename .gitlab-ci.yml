stages:
- source-tests
- build-containers
- packaging
- functional-tests

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_FILES_URL: docker.greenhost.net/open/stapled
  BUILD_COMPILE_CONTAINER: $DOCKER_FILES_URL/build-stretch
  STRETCH_TEST_CONTAINER: $DOCKER_FILES_URL/test-stretch
  # GL bug causes recursive strategy to fail for LE certificates
  # GH recently started using LE certificates:
  # https://gitlab.com/gitlab-org/gitlab-runner/issues/2148
  # Adding old fashion before_script below.
  # GIT_SUBMODULE_STRATEGY: recursive

build:compile-container:
  image: docker:stable-git
  services:
    #- docker:stable-dind
    - docker:18-dind # Hotfix for https://gitlab.com/gitlab-org/gitlab-runner/issues/4501
  stage: build-containers
  variables:
    GIT_STRATEGY: fetch
  script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN docker.greenhost.net
  - docker pull $BUILD_COMPILE_CONTAINER || true
  - docker build --cache-from $CONTAINER_IMAGE:latest --pull --cache-from $BUILD_COMPILE_CONTAINER:latest -t $BUILD_COMPILE_CONTAINER:$CI_BUILD_REF -t $BUILD_COMPILE_CONTAINER:latest -f ./docker/build-stretch/Dockerfile ./
  - docker push $BUILD_COMPILE_CONTAINER:$CI_BUILD_REF
  - docker push $BUILD_COMPILE_CONTAINER:latest

build:test-container:
  stage: build-containers
  image: docker:stable-git
  services:
    #- docker:stable-dind
    - docker:18-dind # Hotfix for https://gitlab.com/gitlab-org/gitlab-runner/issues/4501
  variables:
   GIT_STRATEGY: fetch
  script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN docker.greenhost.net
  - docker pull $STRETCH_TEST_CONTAINER || true
  - docker build --cache-from $CONTAINER_IMAGE:latest --pull --cache-from $STRETCH_TEST_CONTAINER:latest -t $STRETCH_TEST_CONTAINER:$CI_BUILD_REF -t $STRETCH_TEST_CONTAINER:latest -f ./docker/test-stretch/Dockerfile ./
  - docker push $STRETCH_TEST_CONTAINER:$CI_BUILD_REF
  - docker push $STRETCH_TEST_CONTAINER:latest

build:package:
  stage: packaging
  image: $BUILD_COMPILE_CONTAINER
  script:
  - git submodule sync --recursive
  - git submodule update --init --recursive
  - which python3 && $(which python3) --version
  - openssl version
  # Hack to get python-daemon to install..
  - pip3 install --user docutils==0.14
  - pip3 install --user -r requirements.txt
  - make clean
  - make
  artifacts:
    paths:
    - dist/stapled*.tar.gz
    - dist/stapled*.rpm
    - dist/stapled*.whl
    - dist/stapled*.tar.bz2
    - dist/stapled*.deb

source:unit:
  stage: source-tests
  image: python:3.6-stretch
  script:
  - git submodule sync --recursive
  - git submodule update --init --recursive
  - which python3 && $(which python3) --version
  # Hack to get python-daemon to install..
  - pip3 install --user docutils==0.14
  - pip3 install -r requirements.txt
  - pytest -v

test:stretch:
  stage: functional-tests
  image: $STRETCH_TEST_CONTAINER
  variables:
    GIT_STRATEGY: none
  script:
  - which python3 && $(which python3) --version
  - openssl version
  - apt-get install -y -q ./dist/stapled_*all.deb
  - /refresh_testdata.sh
  - stapled -p /tmp/testdata/ --recursive --interactive --no-haproxy-sockets -vvvv --one-off
  dependencies:
  - build:package

source:dev-setup:
  stage: source-tests
  image: python:3.6-stretch
  script:
  - git submodule sync --recursive
  - git submodule update --init --recursive
  - which python3 && $(which python3) --version
  - openssl version
  - pip3 install -e .
  - ./refresh_testdata.sh
  - stapled -p /tmp/testdata/ --recursive --interactive --no-haproxy-sockets -vvvv --one-off
